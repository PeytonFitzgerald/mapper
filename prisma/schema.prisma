// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// Geographic Data

model USState {
    id         Int                     @id @default(autoincrement())
    name       String                  @unique
    properties Json
    geometry   Unsupported("geometry")
    USEcon     USEcon[]

    // the index for that column
    @@index([geometry], name: "USState_idx", type: Gist)
}

// Economic Data
model USEcon {
    id                                   String  @id @default(cuid())
    real_gdp                             Float?
    real_personal                        Float?
    real_pce                             Float?
    current_gdp                          Float?
    personal_income                      Float?
    disposable_income                    Float?
    personal_consumption                 Float?
    real_per_capita_personal_income      Float?
    real_per_capita_pce                  Float?
    current_per_capita_personal_income   Float?
    current_per_capita_disposable_income Float?
    rpp                                  Float?
    implicit_regional_price_deflator     Float?
    employment                           Float?
    year                                 Int
    name                                 String  @unique
    state                                USState @relation(fields: [uSStateId], references: [id])
    uSStateId                            Int
}
